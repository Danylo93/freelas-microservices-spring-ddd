apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: freelas
data:
  init.sql: |
    CREATE SCHEMA IF NOT EXISTS client;
    CREATE SCHEMA IF NOT EXISTS billing;
    CREATE SCHEMA IF NOT EXISTS provider;
    CREATE SCHEMA IF NOT EXISTS request;
    CREATE SCHEMA IF NOT EXISTS matching;
    CREATE SCHEMA IF NOT EXISTS notification;
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: freelas
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/managed-by: manual
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: freelas
    app.kubernetes.io/version: "15"
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: freelas
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_DB
              value: clientdb
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: initdb
          configMap:
            name: postgres-init-script
